#!/usr/bin/env node
var config = require('../src/conf/config.js');
var logger = require('log'), log = new logger(config.logger.level);
var util = require('../src/util');
var udpClient = require('../src/net/udp-client');
//var udpServer = require('../src/net/udp-server');
var request = require('request');
var alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜabcdefghijklmnopqrstuvwxyzäöüß0123456789';


util.dumpEnv();

/**
 * creates a random string
 */
function getRandomString() {
	return getRandomStringByLength(10);
}

/**
 * creates a random string by a given length
 */
function getRandomStringByLength(length) {
	if(!length) {
		length = 5 + Math.floor(Math.random() * 20);
	}
	var str='', idx;
	for(var n=0; n<length; n++) {
		idx = Math.floor(Math.random() * alphabet.length) + 1;
		str += alphabet[idx];
	}
	return str;
}

// get the right address to send events to using the udp-client
udpClient.advertise(function(err) {
	if(err) {
		throw err;
	}
	util.sleep(500, function() { // give the server the chance to fetch the messages
/*
		var messages = udpServer.getMessagesByType(config.udp.message.type.advertisement);
		if(!messages || messages.length === 0) {
			throw new Error('no response from udp server');
		}
		log.info('sending events to %s', messages[0].advertisement.event_post_endpoint);
		udpServer.close();
*/
		log.info('posting events to %s', util.api_domain() + '/event');
		var n = 0;
		while(n<10000) {
			n++;
			request.post(util.api_domain() + '/event', {
//			request.post(messages[0].advertisement.event_post_endpoint, {
				form: {
					event: {
						header: {
							application_id: 'calvin_de',
							source_host: '10.207.131.20',
							timestamp: Date.now(),
							event_type: 'cash-transfer'
						},
						payload: {
							data: '<request><test>'+getRandomString(15)+'</test></request>'
						}
					}
				}
			}, function (err, response, body) {
				if (!err && !body) {
					console.log('ok: %s - %s', JSON.stringify(response), err);
				} else if (err && !response) {
					console.log('error_2: %s', err);
				} else {
					console.log('nok: %s', response.statusCode);
					console.log(body);
					//console.error(response);
				}
			});
		}
	});
});

